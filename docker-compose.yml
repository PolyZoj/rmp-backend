
services:
  # Databases
  psql_users:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=user_db
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - psql_users_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend_net
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10

  psql_clubs:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=club_db
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - psql_clubs_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend_net
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10

  psql_challenges:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=challenges_db
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - psql_challenges_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend_net
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - "8123:8123"
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend_net
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "bash", "-c", "cub kafka-ready -b localhost:9092 1 20" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10


  # Microservices
    # Externally exposed

  auth-service:
    build: ./auth-service
    image: rmp-backend-auth-service
    depends_on:
      - psql_users
      - kafka
    ports:
      - "8081:8080"
    environment:
      - DB_HOST=psql_users
      - DB_PORT=5432
      - DB_NAME=user_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  user-service:
    build: ./user-service
    image: rmp-backend-user-service
    depends_on:
      - psql_users
      - kafka
    ports:
      - "8082:8080"
    environment:
      - DB_HOST=psql_users
      - DB_PORT=5432
      - DB_NAME=user_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  notification-service:
    build: ./notification-service
    image: rmp-backend-notification-service
    depends_on:
      - kafka
    ports:
      - "8083:8080"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  challenges-service:
    build: ./challenges-service
    image: rmp-backend-challenges-service
    depends_on:
      - psql_challenges
      - kafka
    ports:
      - "8084:8080"
    environment:
      - DB_HOST=psql_challenges
      - DB_PORT=5432
      - DB_NAME=challenges_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  club-service:
    build: ./club-service
    image: rmp-backend-club-service
    depends_on:
      - psql_clubs
      - kafka
    ports:
      - "8085:8080"
    environment:
      - DB_HOST=psql_clubs
      - DB_PORT=5432
      - DB_NAME=club_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  # Microservices
    # Internal
  payment-service:
    build: ./payment-service
    image: rmp-backend-payment-service
    depends_on:
      - kafka
    expose:
      - "8080"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  stats-service:
    build: ./stats-service
    image: rmp-backend-stats-service
    depends_on:
      - kafka
    expose:
      - "8080"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  gamification-service:
    build: ./gamification-service
    image: rmp-backend-gamification-service
    depends_on:
      - kafka
    expose:
      - "8080"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

  log-service:
    build: ./log-service
    image: rmp-backend-log-service
    depends_on:
      - clickhouse
      - kafka
    expose:
      - "8080"
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - backend_net
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M

networks:
  backend_net:

volumes:
  psql_users_data:
  psql_clubs_data:
  psql_challenges_data:
  clickhouse_data:
  kafka_data:
